{"version":3,"sources":["components/Section/Section.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["module","exports","Section","title","children","className","Styles","section","propType","PropTypes","string","FeedbackOptions","options","onLeaveFeedback","map","item","key","id","name","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","defaultProps","Notification","message","feedBackOptions","App","state","handleFeedBack","e","setState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","Component","ReactDOM","render","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kLCGvDC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,6BAASC,UAAWC,IAAOC,SACzB,wBAAIF,UAAWC,IAAOH,OAAQA,GAC7BC,IAILF,EAAQM,SAAW,CACjBL,MAAOM,IAAUC,QAGJR,QCeAS,EA3BS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,6BACGD,EAAQE,KAAI,SAAAC,GAAI,OACf,4BACEC,IAAKD,EAAKE,GACVC,KAAMH,EAAKG,KACXC,KAAK,SACLC,QAASP,GAERE,EAAKG,WCVVG,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,6BACE,mCAASJ,GACT,sCAAYC,GACZ,kCAAQC,GACR,oCAAUC,GACV,gDAAsBC,EAAtB,OAKNL,EAAWM,aAAe,CACxBL,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,GAWPL,QCtBAO,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,ICGpCC,EAAkB,CACtB,CAAEb,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,WACf,CAAED,GAAI,EAAGC,KAAM,QAGIa,E,4MACnBC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,eAAiB,SAAAC,GAAC,OAChB,EAAKC,SAAL,eACGD,EAAEE,OAAOlB,KAAO,EAAKc,MAAME,EAAEE,OAAOlB,MAAQ,K,EAGjDmB,mBAAqB,WAAO,IAAD,EACM,EAAKL,MACpC,OAFyB,EACjBV,KADiB,EACXC,QADW,EACFC,K,EAIzBc,gCAAkC,WAAO,IAC/BhB,EAAS,EAAKU,MAAdV,KACR,OAAOiB,KAAKC,MAAOlB,EAAO,EAAKe,qBAAwB,M,uDAG/C,IAAD,EACwBI,KAAKT,MAA5BV,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,oCACE,kBAAC,EAAD,CAASrB,MAAO,yBACd,kBAAC,EAAD,CACES,QAASkB,EACTjB,gBAAiB4B,KAAKR,kBAG1B,kBAAC,EAAD,CAAS9B,MAAO,cACiB,IAA9BsC,KAAKJ,qBACJ,kBAAC,EAAD,CAAcR,QAAS,sBAEvB,kBAAC,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,KAAKJ,qBACZX,mBAAoBe,KAAKH,0C,GAzCNI,aCRjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8d09f526.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3iyi0\",\"title\":\"Section_title__zXMZK\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section className={Styles.section}>\n    <h1 className={Styles.title}>{title}</h1>\n    {children}\n  </section>\n);\n\nSection.propType = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div>\n      {options.map(item => (\n        <button\n          key={item.id}\n          name={item.name}\n          type=\"button\"\n          onClick={onLeaveFeedback}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <p>Good:{good}</p>\n      <p>Neutral:{neutral}</p>\n      <p>Bad:{bad}</p>\n      <p>Total:{total}</p>\n      <p>Positive FeedBack:{positivePercentage}%</p>\n    </div>\n  );\n};\n\nStatistics.defaultProps = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  total: 0,\n  positivePercentage: 0,\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Section from './Section/Section';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Statistics from './Statistics/Statistics';\nimport Notification from './Notification/Notification';\n\nconst feedBackOptions = [\n  { id: 1, name: 'good' },\n  { id: 2, name: 'neutral' },\n  { id: 3, name: 'bad' },\n];\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedBack = e =>\n    this.setState({\n      [e.target.name]: this.state[e.target.name] + 1,\n    });\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return Math.floor((good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions\n            options={feedBackOptions}\n            onLeaveFeedback={this.handleFeedBack}\n          />\n        </Section>\n        <Section title={'Statistics'}>\n          {this.countTotalFeedback() === 0 ? (\n            <Notification message={'No feedback given'} />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}